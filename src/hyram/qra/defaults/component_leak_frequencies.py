"""
Copyright 2015-2025 National Technology & Engineering Solutions of Sandia, LLC (NTESS).
Under the terms of Contract DE-NA0003525 with NTESS, the U.S. Government retains certain rights in this software.

You should have received a copy of the GNU General Public License along with HyRAM+.
If not, see https://www.gnu.org/licenses/.
"""

"""
Lognormal distribution parameters for component leak frequencies based on fuel and phase.
Dict format is <component name>: [<leak_size> [mu, sigma], ...] where leak sizes are 0.01%, 0.1%, 1%, 10%, 100%.
"""

import numpy as np

h2_gas_params = {
    'compressor': np.array([
        [-2.3053, 0.3018],
        [-4.0761, 0.5249],
        [-5.3881, 0.8212],
        [-8.7929, 0.7263],
        [-11.1359, 1.2067],
    ]),
    'vessel': np.array([
        [-13.4770, 0.7347],
        [-13.6410, 0.6387],
        [-14.0512, 0.6203],
        [-14.6144, 0.6041],
        [-15.2732, 0.6156],
    ]),
    'filter': np.array([
        [-5.9900, 0.6060],
        [-6.9800, 0.5850],
        [-7.9600, 0.6260],
        [-8.9500, 0.7180],
        [-9.9400, 0.6740],
    ]),
    'flange': np.array([
        [-3.9125, 1.4920],
        [-6.1191, 1.1345],
        [-8.3252, 2.0541],
        [-10.5327, 0.7208],
        [-12.7385, 1.6925],
    ]),
    'hose': np.array([
        [-7.4534, 0.3863],
        [-8.5011, 0.6050],
        [-8.7103, 0.6106],
        [-8.8001, 0.5901],
        [-9.6934, 0.9836],
    ]),
    'joint': np.array([
        [-10.2591, 0.2423],
        [-12.2703, 0.8727],
        [-11.7538, 0.5333],
        [-11.7961, 0.6073],
        [-11.9590, 0.6600],
    ]),
    'pipe': np.array([
        [-11.7331, 0.7162],
        [-12.5079, 0.7070],
        [-13.8601, 1.2515],
        [-14.5893, 1.1933],
        [-15.7354, 1.8486],
    ]),
    'valve': np.array([
        [-5.8546, 0.2500],
        [-7.4425, 0.4344],
        [-9.8190, 1.1434],
        [-10.6079, 0.6270],
        [-12.2436, 1.3690],
    ]),
    'instrument': np.array([
        [-7.3800, 0.7100],
        [-8.5400, 0.8500],
        [-9.1000, 0.9200],
        [-9.2100, 1.0900],
        [-10.2100, 1.4900],
    ]),
    'exchanger': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'vaporizer': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'arm': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'extra1': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'extra2': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
}

h2_liquid_params = {
    'compressor': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'vessel': np.array([
        [-7.3426, 1.7799],
        [-8.8915, 2.5535],
        [-10.4746, 2.0526],
        [-12.0829, 2.7255],
        [-13.6552, 3.1272],
    ]),
    'filter': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'flange': np.array([
        [-3.9125, 1.4920],
        [-6.1191, 1.1345],
        [-8.3252, 2.0541],
        [-10.5327, 0.7208],
        [-12.7385, 1.6925],
    ]),
    'hose': np.array([
        [-7.4534, 0.3863],
        [-8.5011, 0.6050],
        [-8.7103, 0.6106],
        [-8.8001, 0.5901],
        [-9.6934, 0.9836],
    ]),
    'joint': np.array([
        [-10.2591, 0.2423],
        [-12.2703, 0.8727],
        [-11.7538, 0.5333],
        [-11.7961, 0.6073],
        [-11.9590, 0.6600],
    ]),
    'pipe': np.array([
        [-11.7331, 0.7162],
        [-12.5079, 0.7070],
        [-13.8601, 1.2515],
        [-14.5893, 1.1933],
        [-15.7354, 1.8486],
    ]),
    'valve': np.array([
        [-5.8546, 0.2500],
        [-7.4425, 0.4344],
        [-9.8190, 1.1434],
        [-10.6079, 0.6270],
        [-12.2436, 1.3690],
    ]),
    'instrument': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'exchanger': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'vaporizer': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'arm': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'extra1': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'extra2': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
}

ch4_gas_params = {
    'compressor': np.array([
        [-1.66,  1.01],
        [-3.58, 0.781],
        [-5.50, 0.630],
        [-7.42, 0.588],
        [-9.34, 0.707],
    ]),
    'vessel': np.array([
        [-3.64,  1.22],
        [-4.85, 0.914],
        [-6.07, 0.668],
        [-7.29, 0.568],
        [-8.51, 0.926],
    ]),
    'filter': np.array([
        [-5.99, 0.606],
        [-6.98, 0.585],
        [-7.96, 0.626],
        [-8.95, 0.718],
        [-9.94, 0.674],
    ]),
    'flange': np.array([
        [-2.44,  1.23],
        [-4.74, 0.936],
        [-7.04, 0.708],
        [-9.34, 0.613],
        [-11.6, 0.706],
    ]),
    'hose': np.array([
        [-10.5,  1.22],
        [-9.30, 0.935],
        [-8.15, 0.708],
        [-7.00, 0.612],
        [-5.85, 0.707],
    ]),
    'joint': np.array([
        [0.456,  1.05],
        [-1.49, 0.819],
        [-3.44, 0.627],
        [-5.39, 0.506],
        [-7.33, 0.574],
    ]),
    'pipe': np.array([
        [-2.51,  1.24],
        [-4.20, 0.946],
        [-5.90, 0.879],
        [-7.60, 0.616],
        [-9.30, 0.881],
    ]),
    'valve': np.array([
        [-2.97,  1.05],
        [-3.92, 0.823],
        [-4.86,  1.44],
        [-5.81, 0.576],
        [-6.75,  1.24],
    ]),
    'instrument': np.array([
        [-7.28, 0.715],
        [-8.11, 0.605],
        [-8.94, 0.551],
        [-9.78, 0.534],
        [-10.6, 0.653],
    ]),
    'exchanger': np.array([
        [0.601,  1.31],
        [-1.05,  1.00],
        [-2.71,  1.11],
        [-4.36, 0.618],
        [-6.02, 0.933],
    ]),
    'vaporizer': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'arm': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'extra1': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'extra2': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
}

ch4_liquid_params = {
    'compressor': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'vessel': np.array([
        [-7.6443, 1.1463],
        [-8.8817, 2.2191],
        [-10.1486, 1.9222],
        [-11.4202, 2.4219],
        [-12.6988, 3.1816],
    ]),
    'filter': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'flange': np.array([
        [-10.0826, 0.7306],
        [-10.6980, 1.2105],
        [-11.1787, 2.3964],
        [-11.6591, 2.7634],
        [-12.1601, 2.9150],
    ]),
    'hose': np.array([
        [-13.3971, 0.7419],
        [-11.7497, 0.5645],
        [-10.0943, 4.1882],
        [-8.4524, 0.9343],
        [-6.8075, 3.6381],
    ]),
    'joint': np.array([
        [10.4669, 2.1960],
        [6.1666, 1.6594],
        [1.8652, 1.1464],
        [-2.4345, 0.7068],
        [-6.7363, 0.6198],
    ]),
    'pipe': np.array([
        [-12.8352, 1.3156],
        [-13.4479, 1.4332],
        [-14.0571, 1.1603],
        [-14.6718, 1.3553],
        [-15.2867, 1.8314],
    ]),
    'valve': np.array([
        [-9.3821, 0.7206],
        [-10.0776, 0.9821],
        [-10.7378, 1.1534],
        [-11.3422, 1.9367],
        [-11.9495, 1.9345],
    ]),
    'instrument': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'exchanger': np.array([
        [-6.0563, 0.9571],
        [-7.0191, 1.3035],
        [-8.0347, 1.4167],
        [-9.0535, 2.3068],
        [-10.0834, 1.6190],
    ]),
    'vaporizer': np.array([
        [-4.8184, 2.5489],
        [-3.6464, 1.8695],
        [-2.4760, 1.2243],
        [-1.3037, 0.7074],
        [-0.1328, 0.7068],
    ]),
    'arm': np.array([
        [-1.6169, 3.0126],
        [-4.3987, 2.0841],
        [-7.2019, 1.8945],
        [-10.3173, 1.0339],
        [-12.7037, 3.3875],

    ]),
    'extra1': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'extra2': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
}

c3h8_gas_params = {
    'compressor': np.array([
        [-5.72E+00, 7.44E-01],
        [-6.74E+00, 7.14E-01],
        [-7.75E+00, 1.57E+00],
        [-8.77E+00, 7.37E-01],
        [-9.78E+00, 1.87E+00],
    ]),
    'vessel': np.array([
        [-8.74E+00, 1.02E+00],
        [-9.39E+00, 1.77E+00],
        [-1.00E+01, 2.63E+00],
        [-1.07E+01, 2.03E+00],
        [-1.13E+01, 4.19E+00],
    ]),
    'filter': np.array([
        [-5.99E+00, 6.06E-01],
        [-6.98E+00, 5.85E-01],
        [-7.96E+00, 6.26E-01],
        [-8.95E+00, 7.18E-01],
        [-9.94E+00, 6.74E-01],
    ]),
    'flange': np.array([
        [-1.01E+01, 6.57E-01],
        [-1.08E+01, 1.09E+00],
        [-1.16E+01, 2.16E+00],
        [-1.24E+01, 6.45E-01],
        [-1.32E+01, 1.65E+00],
    ]),
    'hose': np.array([
        [-1.05E+01, 8.37E-01],
        [-1.02E+01, 1.42E+00],
        [-9.77E+00, 2.93E+00],
        [-9.39E+00, 1.11E+00],
        [-9.01E+00, 2.20E+00],
    ]),
    'joint': np.array([
        [-8.86E-02, 2.55E+00],
        [-1.83E+00, 1.87E+00],
        [-3.56E+00, 1.22E+00],
        [-5.30E+00, 7.07E-01],
        [-7.04E+00, 7.07E-01],
    ]),
    'pipe': np.array([
        [-1.20E+01, 1.11E+00],
        [-1.25E+01, 1.04E+00],
        [-1.31E+01, 1.79E+00],
        [-1.36E+01, 1.30E+00],
        [-1.41E+01, 1.74E+00],
    ]),
    'valve': np.array([
        [-9.26E+00, 6.35E-01],
        [-9.87E+00, 1.06E+00],
        [-1.05E+01, 2.73E+00],
        [-1.11E+01, 1.16E+00],
        [-1.17E+01, 2.20E+00],
    ]),
    'instrument': np.array([
        [-7.28E+00, 7.14E-01],
        [-8.11E+00, 6.05E-01],
        [-8.94E+00, 5.51E-01],
        [-9.78E+00, 5.35E-01],
        [-1.06E+01, 6.53E-01],
    ]),
    'exchanger': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'vaporizer': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'arm': np.array([
        [-4.79E+00, 1.23E+00],
        [-5.37E+00, 9.37E-01],
        [-5.94E+00, 7.07E-01],
        [-6.51E+00, 6.14E-01],
        [-7.09E+00, 8.80E-01],
    ]),
    'extra1': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
    'extra2': np.array([
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
        [999., 999.],
    ]),
}

c3h8_liquid_params = c3h8_gas_params


def get_leak_frequency_set_for_species(species, saturated_phase=None):
    species = species.lower()

    if species in ['h2', 'hydrogen']:
        leak_params = (
            h2_liquid_params if saturated_phase in ['gas', 'liquid']
            else h2_gas_params)

    elif species in ['ch4', 'methane']:
        leak_params = (
            ch4_liquid_params if saturated_phase in ['gas', 'liquid']
            else ch4_gas_params)

    elif species in ['c3h8', 'propane']:
        leak_params = (
            c3h8_liquid_params if saturated_phase in ['gas', 'liquid']
            else c3h8_gas_params)

    else:
        raise ValueError('Species not recognized. Valid entires are ' +
                         "'hydrogen', 'methane', or 'propane'.")

    return leak_params
